#############################################################################
##############################################################################
#
#	DO NOT EDIT - file is being maintained by puppet
#
##############################################################################
##############################################################################


START   = FALSE
SUSPEND = FALSE
PREEMPT = FALSE
KILL    = FALSE

DAEMON_LIST = MASTER, SCHEDD


# define max interval for evaluating periodic release/removal
MAX_PERIODIC_EXPR_INTERVAL = 1200

# hold jobs using absurd amounts of disk (100+ GB)
SYSTEM_PERIODIC_HOLD = \
   (JobStatus == 1 || JobStatus == 2) && ((DiskUsage > 100000000 || ResidentSetSize > 2000000))

# Report why the stupid thing went on hold.
SYSTEM_PERIODIC_HOLD_REASON = strcat("Job in status ", JobStatus, " put on hold by SYSTEM_PERIODIC_HOLD due to ", ifThenElse(isUndefined(DiskUsage) || DiskUsage < 100000000, strcat("memory usage ", ResidentSetSize), strcat("disk usage ", DiskUsage)), ".")

# forceful removal of running after 2 days, held jobs after 6 hours,
# and anything trying to run more than 10 times
SYSTEM_PERIODIC_REMOVE = \
   (JobStatus == 5 && CurrentTime - EnteredCurrentStatus > 3600*6) || \
   (JobStatus == 2 && CurrentTime - EnteredCurrentStatus > 3600*24*2) || \
   (JobStatus == 5 && JobRunCount >= 10) || \
   (JobStatus == 5 && HoldReasonCode =?= 14 && HoldReasonSubCode =?= 2)

# Record why the job was removed
SYSTEM_PERIODIC_REMOVE_REASON = strcat("Job removed by SYSTEM_PERIODIC_REMOVE due to ", \
   ifThenElse((JobStatus == 5 && CurrentTime - EnteredCurrentStatus > 3600*6), "being in hold state for 6 hours", \
   ifThenElse((JobStatus == 2 && CurrentTime - EnteredCurrentStatus > 3600*24*2), "runtime of longer than 48 hours", \
   ifThenElse((JobStatus == 5 && JobRunCount >= 10), "more than 10 restarts", \
              "input files missing"))), ".")

# Release from hold a few times
# HoldReasonCode 13 and 14 have to do with failures to upload
SYSTEM_PERIODIC_RELEASE = \
  (   (HoldReasonCode =?= 12) \
   || (HoldReasonCode =?= 13) \
   || (HoldReasonCode =?= 14 && HoldReasonSubCode =!= 2)) \
   && ((CurrentTime - EnteredCurrentStatus > 5*60) \
   && (JobRunCount < 10))

EVENT_LOG                          = $(LOG)/EventLog
EVENT_LOG_USE_XML                  = True
EVENT_LOG_JOB_AD_INFORMATION_ATTRS = Owner,CurrentHosts,x509userproxysubject,AccountingGroup,GlobalJobId,QDate,JobStartDate,JobCurrentStartDate,JobFinishedHookDone,RemoteHost

##  Maximum number of simultaneous downloads of output files from
##  execute machines to the submit machine (limit applied per schedd).
##  The value 0 means unlimited.
MAX_CONCURRENT_DOWNLOADS = 50

##  Maximum number of simultaneous uploads of input files from the
##  submit machine to execute machines (limit applied per schedd).
##  The value 0 means unlimited.
MAX_CONCURRENT_UPLOADS = 50

# Next line is commented out because gratia RPM now sets this value too.
# PER_JOB_HISTORY_DIR = /var/lib/gratia/data

MAX_HISTORY_LOG = 104857600
MAX_HISTORY_ROTATIONS = 10

## Configure integration with QPID
QMF_PUBLISH_SUBMISSIONS = FALSE
QMF_BROKER_USERNAME = submitter
QMF_BROKER_PASSWORD_FILE = /etc/condor/qpid_passfile_submitter
QMF_BROKER_AUTH_MECH = PLAIN
QMF_BROKER_HOST = red-web.unl.edu
QMF_BROKER_PORT = 5672
ENABLE_RUNTIME_CONFIG = TRUE

USE_CLONE_TO_CREATE_PROCESSES = false

# Settings for sleeper pool schedd
SLEEPERSCHEDD = $(SCHEDD)
SLEEPERSCHEDD_ARGS = -f -local-name sleeper
SLEEPERSCHEDD_SPOOL = $(SPOOL)/sleeper
SCHEDD.SLEEPER.COLLECTOR_HOST = $(CONDOR_HOST):9619
SCHEDD.SLEEPER.SCHEDD_NAME = sleeper@$(FULL_HOSTNAME)
SCHEDD.SLEEPER.SPOOL = $(SLEEPERSCHEDD_SPOOL)
SCHEDD.SLEEPER.JOB_QUEUE_LOG = $(SLEEPERSCHEDD_SPOOL)/job_queue.log
SCHEDD.SLEEPER.SCHEDD_LOG = $(LOG)/sleeper/ScheddLog
SCHEDD.SLEEPER.SCHEDD_ADDRESS_FILE = $(SLEEPERSCHEDD_SPOOL)/.schedd_address
SCHEDD.SLEEPER.SCHEDD_DAEMON_AD_FILE = $(SLEEPERSCHEDD_SPOOL)/.schedd_classad
SCHEDD.SLEEPER.HISTORY = $(SLEEPERSCHEDD_SPOOL)/history
SCHEDD.SLEEPER.QMF_STOREFILE = $(LOG)/sleeper/.schedd_storefile
SCHEDD.SLEEPER.FLOCK_TO = red-condor.unl.edu:9619
SCHEDD.SLEEPER.FLOCK_NEGOTIATOR_HOSTS = red-condor.unl.edu:9619
SCHEDD.SLEEPER.FLOCK_COLLECTOR_HOSTS = red-condor.unl.edu:9619
VALID_SPOOL_FILES = $(VALID_SPOOL_FILES), sleeper
DAEMON_LIST = $(DAEMON_LIST), SLEEPERSCHEDD

